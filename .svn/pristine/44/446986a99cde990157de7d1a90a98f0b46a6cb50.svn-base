{
 "metadata": {
  "name": "",
  "signature": "sha256:a2a2e8bfcf29a4d52765cbd5cce07381c4bad9256c2b475e1580ee1e90926baa"
 },
 "nbformat": 3,
 "nbformat_minor": 0,
 "worksheets": [
  {
   "cells": [
    {
     "cell_type": "markdown",
     "metadata": {},
     "source": [
      "#1. \u83b7\u53d612\u56fd\u503a14\u7684\u4ef7\u683c\u4fe1\u606f, \u6570\u636e\u6765\u6e90\u4e2d\u503a\u4f30\u503c"
     ]
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "from CAL.PyCAL import *\n",
      "import pandas as pd\n",
      "import numpy as np"
     ],
     "language": "python",
     "metadata": {},
     "outputs": []
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "res = MarketDataGetHistDailyQuotes('120014', fields = ['yield', 'cleanPrice', 'dirtyPrice'], startDate = '20100101', endDate = '20141224')"
     ],
     "language": "python",
     "metadata": {},
     "outputs": []
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "res[:10]"
     ],
     "language": "python",
     "metadata": {},
     "outputs": []
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "Plot(res, settings = {'x':'tradeDate','y':['cleanPrice', 'dirtyPrice'],'title':u'12\u56fd\u503a14\u8d70\u52bf'})"
     ],
     "language": "python",
     "metadata": {},
     "outputs": []
    },
    {
     "cell_type": "markdown",
     "metadata": {},
     "source": [
      "#2. \u83b7\u53d6\u503a\u5238\u9759\u6001\u7ed3\u6784\u4fe1\u606f"
     ]
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "static = BondDBUtilities.BondStatInfo('120014')"
     ],
     "language": "python",
     "metadata": {},
     "outputs": []
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "static"
     ],
     "language": "python",
     "metadata": {},
     "outputs": []
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "coupon = static['coupon'].values[0] / 100.0\n",
      "startDate = static['firstAccrual'].values[0]\n",
      "maturityDate = static['maturityDate'].values[0]\n",
      "accrualType = static['accrualType'].values[0]\n",
      "freq = static['cpnFreq'].values[0]\n",
      "freq = int(freq[:-2])\n",
      "if accrualType == 'ACT/ACT':\n",
      "    accrualType = 2"
     ],
     "language": "python",
     "metadata": {},
     "outputs": []
    },
    {
     "cell_type": "markdown",
     "metadata": {},
     "source": [
      "#3. \u901a\u8fc7CAL\u8ba1\u7b97\u503a\u5238\u7684\u51c0\u4ef7\uff0c\u4e0e\u4e2d\u503a\u6570\u636e\u6bd4\u5bf9"
     ]
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "evaluationDate = res['tradeDate']\n",
      "cleanPrice = res['cleanPrice']"
     ],
     "language": "python",
     "metadata": {},
     "outputs": []
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "bondPrice = FixedRateBondYield(evaluationDate  = evaluationDate, \n",
      "                          startDate = startDate, \n",
      "                          tenor = 5, \n",
      "                          coupon = coupon, \n",
      "                          cleanPrice = cleanPrice,\n",
      "                          compounding = 0, \n",
      "                          frequency = freq, \n",
      "                          DayCounter = accrualType,\n",
      "                          settlementDays = 0)\n",
      "bondPrice['yield'] = np.round(bondPrice['yield'].astype('float64').values * 100, 4)\n",
      "bondPrice['tradeDate'] = evaluationDate"
     ],
     "language": "python",
     "metadata": {},
     "outputs": []
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "bondPrice[:10]"
     ],
     "language": "python",
     "metadata": {},
     "outputs": []
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "comparingTable = pd.DataFrame({'CB_YTM':res['yield'].values,\n",
      "                               'CAL_YTM':bondPrice['yield'].values},\n",
      "                              index = bondPrice['tradeDate'])\n",
      "comparingTable['Diff. (bps)'] = (comparingTable['CB_YTM'] - comparingTable['CAL_YTM']) * 100\n",
      "comparingTable[:50]"
     ],
     "language": "python",
     "metadata": {},
     "outputs": []
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "Plot(comparingTable, settings = {'secondary_y':['Diff. (bps)'], 'ylim':(2.5,5), \n",
      "                                 'title':u'12\u56fd\u503a14 CAL\u8ba1\u7b97\u4e0e\u4e2d\u503a\u7f51\u6570\u636e\u6bd4\u8f83'})"
     ],
     "language": "python",
     "metadata": {},
     "outputs": []
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [],
     "language": "python",
     "metadata": {},
     "outputs": []
    }
   ],
   "metadata": {}
  }
 ]
}